@page "/lisaa-auto"
@using AutoHuoltoSovellus.Models
@using AutoHuoltoSovellus.Controllers
@using AutoHuoltoSovellus.Services
@inject AutoService AutoService
@inject NavigationManager Navigation

<h3>Lisää uusi auto</h3>

<EditForm Model="UusiAuto" OnValidSubmit="TallennaAuto">
    <DataAnnotationsValidator />
    
    <label>Rekisterinumero:</label>
    <InputText @bind-Value="UusiAuto.Rekisterinumero" />
//*TODO Lisää säiliö pudotusvalikko*//
    @* <label>Säiliö:</label>
    <InputDate @bind-Value="UusiAuto.Säiliö" /> *@
    
    <label>Katsastus:</label>
    <InputDate @bind-Value="UusiAuto.KatsastusPvm" />

    <label>ADR:</label>
    <InputDate @bind-Value="UusiAuto.ADRPvm" />

    <label>Piirturi:</label>
    <InputDate @bind-Value="UusiAuto.PiirturiPvm" />

    <label>Alkolukko:</label>
    <InputDate @bind-Value="UusiAuto.AlkolukkoPvm" />

    <label>Nopeudenrajoitin:</label>
    <InputDate @bind-Value="UusiAuto.NopeudenrajoitinPvm" />
    
    <button type="submit">Tallenna</button>
</EditForm>

@if (Virheilmoitus != null)
{
    <p style="color: red">@Virheilmoitus</p>
}

@code {
    private Auto UusiAuto = new Auto();
    private string? Virheilmoitus;

    private async Task TallennaAuto()
{
    if (AutoService != null) // Varmistetaan, että palvelu on injektoitu
    {
        bool onnistui = await AutoService.LisaaAuto(UusiAuto);
        if (onnistui)
        {
            Navigation.NavigateTo("/autot", forceLoad: true);
        }
        else
        {
            Virheilmoitus = "Auton lisäys epäonnistui.";
        }
    }
    else
    {
        Virheilmoitus = "AutoService ei ole käytettävissä!";
    }
}
}